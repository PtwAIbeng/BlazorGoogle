@inject NavigationManager Navigation
@inject BlazorAppAuth.Utils.AuthenticatedUserInfo UserInfo
@inject IJSRuntime JSRuntime
@inject SessionService sessionService

<div class="dropdown">
    <button class="btn btn-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" @onclick="InitializeDropdown">
        <AuthorizeView>
            <Authorized>
                @UserInfo.GetAccount().FullName
            </Authorized>
            <NotAuthorized>
                @(UserInfo.GetAccount()?.FullName ?? "Guest")
            </NotAuthorized>
        </AuthorizeView>
    </button>
    <ul class="dropdown-menu">
        <AuthorizeView>
            <Authorized>
                @* <li>
                    <!-- Button trigger modal -->
                    <a data-bs-toggle="modal" data-bs-target="#rolesModal" style="cursor:pointer">
                        @GetCurrentRole()
                    </a>
                </li> *@
                <li><a href="MicrosoftIdentity/Account/SignOut">Log out</a></li>
            </Authorized>
            <NotAuthorized>
                <li><a href="MicrosoftIdentity/Account/SignIn">Log in</a></li>
            </NotAuthorized>
        </AuthorizeView>
    </ul>
</div>
@* <!-- Modal -->
<div class="modal fade" id="rolesModal" tabindex="-1" aria-labelledby="rolesModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="rolesModalLabel">Modal title</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div> *@
@code {
    private string GetCurrentRole()
    {
        var roleSession = sessionService.GetSessionValue("Role");
        if (string.IsNullOrEmpty(roleSession))
        {
            return @UserInfo.GetAccount().FullName;
        }
        return roleSession;
    }

    private async Task InitializeDropdown()
    {
        await JSRuntime.InvokeVoidAsync("showModal", "#rolesModal");
    }
}